% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_richlegend.R
\docType{data}
\name{geom_richlegend}
\alias{geom_richlegend}
\alias{GeomRichLegend}
\title{Create a 'rich legend' for your ggplot2 plot.}
\format{
An object of class \code{GeomRichLegend} (inherits from \code{Geom}, \code{ggproto}, \code{gg}) of length 7.
}
\usage{
geom_richlegend(
  mapping = NULL,
  data = NULL,
  legend.position = "topright",
  na.rm = FALSE,
  inherit.aes = TRUE,
  ...
)

GeomRichLegend
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{legend.position}{Either:
\itemize{
\item a two-element numeric vector such as \code{c(0.2, 0.9)}. The first element
denoted the x-position of the data and the second element denotes the
y-position. Each element must be between 0 and 1 (inclusive).
\item one of the following strings: "left", "right", "bottom", "top",
"topleft", "topright", "bottomleft", "bottomright".
}

Default is "topright", which is equivalent to \code{c(0.975, 0.975)}.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}
}
\description{
\code{geom_richlegend()} draws coloured text in lieu of a legend. It
uses the wonderful \code{{ggtext}} to create coloured text annotation(s) at a
location of your choice on your plot. Use this instead of a standard legend.
}
\examples{
library(ggplot2)

base_plot <- ggplot(mtcars, aes(x = wt, y = mpg, col = factor(cyl))) +
  geom_point() +
  theme(legend.position = "none")

# By default, the rich legend is placed at the "topright"
base_plot +
  geom_richlegend(aes(label = cyl))

# You can change the position of the rich legend:
base_plot +
  geom_richlegend(aes(label = cyl),
                  legend.position = "top")

# Or you can change the position using a numeric vector:
base_plot +
  geom_richlegend(aes(label = cyl),
                  legend.position = c(0.1, 0.1))

# The legend respects facets:
base_plot +
  geom_richlegend(aes(label = cyl)) +
  facet_wrap(~cyl)


}
\keyword{datasets}
